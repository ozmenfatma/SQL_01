CREATE TABLE ogrenciler6
(
ogrenci_no char(7),-- uzunlugunu bildigimiz stringler icin CHAR
isim varchar(20),-- uzunlugunu bilmedigimiz string icin VARCHAR
soyisim varchar(25),
not_ort real,-- Ondalıklı sayılar için kullanılır(Double gibi)
kayit_tarih date
);

-- VAROLAN BIR TABLODAN YENI BIR TABLO OLUSTURMA
CREATE TABLE NOTLAR
AS SELECT isim,not_ort FROM ogrenciler6;

SELECT * from notlar;

--TABLO icine Veri ekleme

INSERT INTO notlar VALUES ('orhan',95.5);
INSERT INTO notlar VALUES ('ali',75.5);
INSERT INTO notlar VALUES ('musa',45.5);
INSERT INTO notlar VALUES ('sumeyye',85.5);
INSERT INTO notlar VALUES ('hakan',65.5);
INSERT INTO notlar VALUES ('adem',75.5);

--CONSTRAINT
/*
pk null olamaz, unique null olabilir
pk tabloda bir tane olur
unique istediğiniz kadar olabilir
*/
--UNIQUE

CREATE TABLE ogrenciler7
(
ogrenci_no char(7) UNIQUE,
isim varchar(20) NOT NULL,
soyisim varchar(25),
not_ort real,
kayit_tarih date
);
SELECT * from ogrenciler7;

INSERT INTO ogrenciler7 VALUES ('1234567','orhan','evren',95.5,now());
INSERT INTO ogrenciler7 VALUES ('1234568','ali','can',95.5,now());
INSERT INTO ogrenciler7 (ogrenci_no,soyisim,not_ort) VALUES ('1234569','Evren',85.7);--NOT NULL kisitlamasi oldugu icn veri eklenemeedi

-- PRIMARY KEY olusturma 

CREATE TABLE ogrenciler9
(
ogrenci_no char(7) ,
isim varchar(20),
soyisim varchar(25),
not_ort real,
kayit_tarih date,
CONSTRAINT ogrenci PRIMARY KEY(ogrenci_no)	--constraint e isim vermemizi sagliyor
);

-- FOREIGN KEY
/*
“tedarikciler3” isimli bir tablo olusturun. Tabloda “tedarikci_id”, “tedarikci_ismi”,
“iletisim_isim” field’lari olsun ve “tedarikci_id” yi Primary Key yapin.
“urunler” isminde baska bir tablo olusturun “tedarikci_id” ve “urun_id” field’lari olsun ve
“tedarikci_id” yi Foreign Key yapin.
*/

Create table tedarikciler3
(
tedarikci_id char(5) PRIMARY KEY,
tedarikci_ismi varchar(20),
iletisim_isim varchar (20)	
);

Create table urunler(
tedarikci_id char(5),
urun_id char (5),
Foreign Key (tedarikci_id) REFERENCES tedarikciler3(tedarikci_id)
);

Select * from urunler;
select * from tedarikciler3;

/*
SORU 
“calisanlar” isimli bir Tablo olusturun. Icinde “id”, “isim”, “maas”, “ise_baslama” field’lari olsun. “id” yi Primary Key yapin, “isim” i Unique, “maas” i Not Null yapın.
“adresler” isminde baska bir tablo olusturun.Icinde “adres_id”, “sokak”, “cadde” ve “sehir” fieldlari olsun. “adres_id” field‘i ile Foreign Key oluşturun.
*/


Create table calisanlar
(
id char(5) Primary key,
isim varchar(20) unique,
maas int NOT NULL,
ise_baslama date
);

create table adresler (
adres_id char (5),
sokak varchar(15),
cadde varchar(15),
sehir varchar(15),
Foreign Key (adres_id) References calisanlar(id)	
);


INSERT INTO calisanlar VALUES('10002', 'Mehmet Yılmaz' ,12000, '2018-04-14');
INSERT INTO calisanlar VALUES('10008', null, 5000, '2018-04-14');
--INSERT INTO calisanlar VALUES('10010', 'Mehmet Yılmaz', 5000, '2018-04-14');-- uniqe cons. kabul etmez
INSERT INTO calisanlar VALUES('10004', 'Veli Han', 5000, '2018-04-14');
INSERT INTO calisanlar VALUES('10005', 'Mustafa Ali', 5000, '2018-04-14');
--INSERT INTO calisanlar VALUES('10006', 'Canan Yaş', NULL, '2019-04-12');--not null cons. kabul etmez
INSERT INTO calisanlar VALUES('10003', 'CAN', 5000, '2018-04-14');
--INSERT INTO calisanlar VALUES('10007', 'CAN', 5000, '2018-04-14');-- uniqe cons. kabul etmez
--INSERT INTO calisanlar VALUES('10009', 'cem', '', '2018-04-14');-- syntax hatasi
--INSERT INTO calisanlar VALUES('', 'osman', 2000, '2018-04-14');--primary key de hicligi kabul etti
--INSERT INTO calisanlar VALUES('', 'osman can', 2000, '2018-04-14');--2. hicligi kabul etmedi primary key de cunku unique olmali
--INSERT INTO calisanlar VALUES( '10002', 'ayse Yılmaz' ,12000, '2018-04-14');-- ayni primary kabul etmez
--INSERT INTO calisanlar VALUES( null, 'filiz ' ,12000, '2018-04-14');--primary key hatali null olmamaz


INSERT INTO adresler VALUES('10003','Mutlu Sok', '40.Cad.','IST');
INSERT INTO adresler VALUES('10003','Can Sok', '50.Cad.','Ankara');
INSERT INTO adresler VALUES('10002','Ağa Sok', '30.Cad.','Antep');

-- Parent tabloda olmayan id ile child a ekleme yapamayiz
INSERT INTO adresler VALUES('10012','Ağa Sok', '30.Cad.','Antep');

-- FK'ye null değeri atanabilir.
INSERT INTO adresler VALUES(NULL,'Ağa Sok', '30.Cad.','Antep');
INSERT INTO adresler VALUES(NULL,'Ağa Sok', '30.Cad.','Maraş');

select * from calisanlar;
select * from adresler;

Create table calisanlar1
(
id char(5) Primary key,
isim varchar(20) unique,
maas int CHECK (maas>10000),
ise_baslama date
);

INSERT INTO calisanlar1 VALUES('10006', 'Mehmet ozmen' ,3000, '2018-04-14');
select * from calisanlar1

--DQL --WHERE KULLANIMI
select * from calisanlar;
select isim From calisanlar;

 -- Calisanlar tablosundan maasi 5000 den buyuk olanlari listele
 
 select isim,maas From calisanlar where maas>5000;
 
 --Calisanlar tablosundan ismi Veli Han olan tum verileri listele
 
  select * From calisanlar where isim='Veli Han';
  
  
 -- Calisanlar tablosundan maasi 5000 olanlarin tum verilerini listele
  
  select * From calisanlar where maas=5000;
  
 --DML -- DELETE KOMUTU

delete from calisanlar ; -- Eger parent Table baska bir child table ile iliskili ise once child table silinmelidir
delete from adresler; --icindeki verileri siler

select * from adresler;

--Adresler tablosundan sehri antep olan verileri silin

delete from adresler where sehir='Antep';

CREATE TABLE ogrenciler3
(
id int,
isim VARCHAR(50),
veli_isim VARCHAR(50),
yazili_notu int
);

INSERT INTO ogrenciler3 VALUES(123, 'Ali Can', 'Hasan',75);
INSERT INTO ogrenciler3 VALUES(124, 'Merve Gul', 'Ayse',85);
INSERT INTO ogrenciler3 VALUES(125, 'Kemal Yasa', 'Hasan',85);
INSERT INTO ogrenciler3 VALUES(126, 'Nesibe Yilmaz', 'Ayse',95);
INSERT INTO ogrenciler3 VALUES(127, 'Mustafa Bak', 'Can',99);
INSERT INTO ogrenciler3 VALUES(127, 'Mustafa Bak', 'Ali', 99);
 
 select * from ogrenciler3;
 
 -- ismi Nesibe Yilmaz veya Mustafa Bak olan kayıtları silelim.
 
 